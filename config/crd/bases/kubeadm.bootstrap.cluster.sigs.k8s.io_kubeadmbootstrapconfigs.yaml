
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: kubeadmbootstrapconfigs.kubeadm.bootstrap.cluster.sigs.k8s.io
spec:
  group: kubeadm.bootstrap.cluster.sigs.k8s.io
  names:
    kind: KubeadmBootstrapConfig
    plural: kubeadmbootstrapconfigs
  scope: ""
  validation:
    openAPIV3Schema:
      description: KubeadmBootstrapConfig is the Schema for the kubeadmbootstrapconfigs
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
            clusterName:
              description: The name of the cluster which the object belongs to. This
                is used to distinguish resources with same name and namespace in different
                clusters. This field is not set anywhere right now and apiserver is
                going to ignore it if set in create or update request.
              type: string
            creationTimestamp:
              description: "CreationTimestamp is a timestamp representing the server
                time when this object was created. It is not guaranteed to be set
                in happens-before order across separate operations. Clients may not
                set this value. It is represented in RFC3339 form and is in UTC. \n
                Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
              format: date-time
              type: string
            deletionGracePeriodSeconds:
              description: Number of seconds allowed for this object to gracefully
                terminate before it will be removed from the system. Only set when
                deletionTimestamp is also set. May only be shortened. Read-only.
              format: int64
              type: integer
            deletionTimestamp:
              description: "DeletionTimestamp is RFC 3339 date and time at which this
                resource will be deleted. This field is set by the server when a graceful
                deletion is requested by the user, and is not directly settable by
                a client. The resource is expected to be deleted (no longer visible
                from resource lists, and not reachable by name) after the time in
                this field, once the finalizers list is empty. As long as the finalizers
                list contains items, deletion is blocked. Once the deletionTimestamp
                is set, this value may not be unset or be set further into the future,
                although it may be shortened or the resource may be deleted prior
                to this time. For example, a user may request that a pod is deleted
                in 30 seconds. The Kubelet will react by sending a graceful termination
                signal to the containers in the pod. After that 30 seconds, the Kubelet
                will send a hard termination signal (SIGKILL) to the container and
                after cleanup, remove the pod from the API. In the presence of network
                partitions, this object may still exist after this timestamp, until
                an administrator or automated process can determine the resource is
                fully terminated. If not set, graceful deletion of the object has
                not been requested. \n Populated by the system when a graceful deletion
                is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
              format: date-time
              type: string
            finalizers:
              description: Must be empty before the object is deleted from the registry.
                Each entry is an identifier for the responsible component that will
                remove the entry from the list. If the deletionTimestamp of the object
                is non-nil, entries in this list can only be removed.
              items:
                type: string
              type: array
            generateName:
              description: "GenerateName is an optional prefix, used by the server,
                to generate a unique name ONLY IF the Name field has not been provided.
                If this field is used, the name returned to the client will be different
                than the name passed. This value will also be combined with a unique
                suffix. The provided value has the same validation rules as the Name
                field, and may be truncated by the length of the suffix required to
                make the value unique on the server. \n If this field is specified
                and the generated name exists, the server will NOT return a 409 -
                instead, it will either return 201 Created or 500 with Reason ServerTimeout
                indicating a unique name could not be found in the time allotted,
                and the client should retry (optionally after the time indicated in
                the Retry-After header). \n Applied only if Name is not specified.
                More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency"
              type: string
            generation:
              description: A sequence number representing a specific generation of
                the desired state. Populated by the system. Read-only.
              format: int64
              type: integer
            initializers:
              description: "An initializer is a controller which enforces some system
                invariant at object creation time. This field is a list of initializers
                that have not yet acted on this object. If nil or empty, this object
                has been completely initialized. Otherwise, the object is considered
                uninitialized and is hidden (in list/watch and get calls) from clients
                that haven't explicitly asked to observe uninitialized objects. \n
                When an object is created, the system will populate this list with
                the current set of initializers. Only privileged users may set or
                modify this list. Once it is empty, it may not be modified further
                by any user. \n DEPRECATED - initializers are an alpha field and will
                be removed in v1.15."
              properties:
                pending:
                  description: Pending is a list of initializers that must execute
                    in order before this object is visible. When the last pending
                    initializer is removed, and no failing result is set, the initializers
                    struct will be set to nil and the object is considered as initialized
                    and visible to all clients.
                  items:
                    properties:
                      name:
                        description: name of the process that is responsible for initializing
                          this object.
                        type: string
                    required:
                    - name
                    type: object
                  type: array
                result:
                  description: If result is set with the Failure field, the object
                    will be persisted to storage and then deleted, ensuring that other
                    clients can observe the deletion.
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                      type: string
                    code:
                      description: Suggested HTTP return code for this status, 0 if
                        not set.
                      format: int32
                      type: integer
                    details:
                      description: Extended data associated with the reason.  Each
                        reason may define its own extended details. This field is
                        optional and the data returned is not guaranteed to conform
                        to any schema except that defined by the reason type.
                      properties:
                        causes:
                          description: The Causes array includes more details associated
                            with the StatusReason failure. Not all StatusReasons may
                            provide detailed causes.
                          items:
                            properties:
                              field:
                                description: "The field of the resource that has caused
                                  this error, as named by its JSON serialization.
                                  May include dot and postfix notation for nested
                                  attributes. Arrays are zero-indexed.  Fields may
                                  appear more than once in an array of causes due
                                  to fields having multiple errors. Optional. \n Examples:
                                  \  \"name\" - the field \"name\" on the current
                                  resource   \"items[0].name\" - the field \"name\"
                                  on the first array entry in \"items\""
                                type: string
                              message:
                                description: A human-readable description of the cause
                                  of the error.  This field may be presented as-is
                                  to a reader.
                                type: string
                              reason:
                                description: A machine-readable description of the
                                  cause of the error. If this value is empty there
                                  is no information available.
                                type: string
                            type: object
                          type: array
                        group:
                          description: The group attribute of the resource associated
                            with the status StatusReason.
                          type: string
                        kind:
                          description: 'The kind attribute of the resource associated
                            with the status StatusReason. On some operations may differ
                            from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: The name attribute of the resource associated
                            with the status StatusReason (when there is a single name
                            which can be described).
                          type: string
                        retryAfterSeconds:
                          description: If specified, the time in seconds before the
                            operation should be retried. Some errors may indicate
                            the client must take an alternate action - for those errors
                            this field may indicate how long to wait before taking
                            the alternate action.
                          format: int32
                          type: integer
                        uid:
                          description: 'UID of the resource. (when there is a single
                            resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                          type: string
                      type: object
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                      type: string
                    message:
                      description: A human-readable description of the status of this
                        operation.
                      type: string
                    metadata:
                      description: 'Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                      properties:
                        continue:
                          description: continue may be set if the user set a limit
                            on the number of items returned, and indicates that the
                            server has more data available. The value is opaque and
                            may be used to issue another request to the endpoint that
                            served this list to retrieve the next set of available
                            objects. Continuing a consistent list may not be possible
                            if the server configuration has changed or more than a
                            few minutes have passed. The resourceVersion field returned
                            when using this continue value will be identical to the
                            value in the first response, unless you have received
                            this token from an error message.
                          type: string
                        resourceVersion:
                          description: 'String that identifies the server''s internal
                            version of this object that can be used by clients to
                            determine when objects have changed. Value must be treated
                            as opaque by clients and passed unmodified back to the
                            server. Populated by the system. Read-only. More info:
                            https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        selfLink:
                          description: selfLink is a URL representing this object.
                            Populated by the system. Read-only.
                          type: string
                      type: object
                    reason:
                      description: A machine-readable description of why this operation
                        is in the "Failure" status. If this value is empty there is
                        no information available. A Reason clarifies an HTTP status
                        code but does not override it.
                      type: string
                    status:
                      description: 'Status of the operation. One of: "Success" or
                        "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                      type: string
                  type: object
              required:
              - pending
              type: object
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            managedFields:
              description: "ManagedFields maps workflow-id and version to the set
                of fields that are managed by that workflow. This is mostly for internal
                housekeeping, and users typically shouldn't need to set or understand
                this field. A workflow can be the user's name, a controller's name,
                or the name of a specific apply path like \"ci-cd\". The set of fields
                is always in the version that the workflow used when modifying the
                object. \n This field is alpha and can be changed or removed without
                notice."
              items:
                properties:
                  apiVersion:
                    description: APIVersion defines the version of this resource that
                      this field set applies to. The format is "group/version" just
                      like the top-level APIVersion field. It is necessary to track
                      the version of a field set because it cannot be automatically
                      converted.
                    type: string
                  fields:
                    additionalProperties: true
                    description: Fields identifies a set of fields.
                    type: object
                  manager:
                    description: Manager is an identifier of the workflow managing
                      these fields.
                    type: string
                  operation:
                    description: Operation is the type of operation which lead to
                      this ManagedFieldsEntry being created. The only valid values
                      for this field are 'Apply' and 'Update'.
                    type: string
                  time:
                    description: Time is timestamp of when these fields were set.
                      It should always be empty if Operation is 'Apply'
                    format: date-time
                    type: string
                type: object
              type: array
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within each name must be unique.
                An empty namespace is equivalent to the \"default\" namespace, but
                \"default\" is the canonical representation. Not all objects are required
                to be scoped to a namespace - the value of this field for those objects
                will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info:
                http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            ownerReferences:
              description: List of objects depended by this object. If ALL objects
                in the list have been deleted, this object will be garbage collected.
                If this object is managed by a controller, then an entry in this list
                will point to this controller, with the controller field set to true.
                There cannot be more than one managing controller.
              items:
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  blockOwnerDeletion:
                    description: If true, AND if the owner has the "foregroundDeletion"
                      finalizer, then the owner cannot be deleted from the key-value
                      store until this reference is removed. Defaults to false. To
                      set this field, a user needs "delete" permission of the owner,
                      otherwise 422 (Unprocessable Entity) will be returned.
                    type: boolean
                  controller:
                    description: If true, this reference points to the managing controller.
                    type: boolean
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                    type: string
                required:
                - apiVersion
                - kind
                - name
                - uid
                type: object
              type: array
            resourceVersion:
              description: "An opaque value that represents the internal version of
                this object that can be used by clients to determine when objects
                have changed. May be used for optimistic concurrency, change detection,
                and the watch operation on a resource or set of resources. Clients
                must treat these values as opaque and passed unmodified back to the
                server. They may only be valid for a particular resource or set of
                resources. \n Populated by the system. Read-only. Value must be treated
                as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
              type: string
            selfLink:
              description: SelfLink is a URL representing this object. Populated by
                the system. Read-only.
              type: string
            uid:
              description: "UID is the unique in time and space value for this object.
                It is typically generated by the server on successful creation of
                a resource and is not allowed to change on PUT operations. \n Populated
                by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
              type: string
          type: object
        spec:
          properties:
            clusterConfiguration:
              properties:
                apiServer:
                  description: APIServer contains extra settings for the API server
                    control plane component
                  properties:
                    certSANs:
                      description: CertSANs sets extra Subject Alternative Names for
                        the API Server signing cert.
                      items:
                        type: string
                      type: array
                    extraArgs:
                      additionalProperties:
                        type: string
                      description: 'ExtraArgs is an extra set of flags to pass to
                        the control plane component. TODO: This is temporary and ideally
                        we would like to switch all components to use ComponentConfig
                        + ConfigMaps.'
                      type: object
                    extraVolumes:
                      description: ExtraVolumes is an extra set of host volumes, mounted
                        to the control plane component.
                      items:
                        properties:
                          hostPath:
                            description: HostPath is the path in the host that will
                              be mounted inside the pod.
                            type: string
                          mountPath:
                            description: MountPath is the path inside the pod where
                              hostPath will be mounted.
                            type: string
                          name:
                            description: Name of the volume inside the pod template.
                            type: string
                          pathType:
                            description: PathType is the type of the HostPath.
                            type: string
                          readOnly:
                            description: ReadOnly controls write access to the volume
                            type: boolean
                        required:
                        - name
                        - hostPath
                        - mountPath
                        type: object
                      type: array
                    timeoutForControlPlane:
                      description: TimeoutForControlPlane controls the timeout that
                        we use for API server to appear
                      type: string
                  type: object
                apiVersion:
                  description: 'APIVersion defines the versioned schema of this representation
                    of an object. Servers should convert recognized schemas to the
                    latest internal value, and may reject unrecognized values. More
                    info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                  type: string
                certificatesDir:
                  description: CertificatesDir specifies where to store or look for
                    all required certificates.
                  type: string
                clusterName:
                  description: The cluster name
                  type: string
                controlPlaneEndpoint:
                  description: 'ControlPlaneEndpoint sets a stable IP address or DNS
                    name for the control plane; it can be a valid IP address or a
                    RFC-1123 DNS subdomain, both with optional TCP port. In case the
                    ControlPlaneEndpoint is not specified, the AdvertiseAddress +
                    BindPort are used; in case the ControlPlaneEndpoint is specified
                    but without a TCP port, the BindPort is used. Possible usages
                    are: e.g. In a cluster with more than one control plane instances,
                    this field should be assigned the address of the external load
                    balancer in front of the control plane instances. e.g.  in environments
                    with enforced node recycling, the ControlPlaneEndpoint could be
                    used for assigning a stable DNS to the control plane.'
                  type: string
                controllerManager:
                  description: ControllerManager contains extra settings for the controller
                    manager control plane component
                  properties:
                    extraArgs:
                      additionalProperties:
                        type: string
                      description: 'ExtraArgs is an extra set of flags to pass to
                        the control plane component. TODO: This is temporary and ideally
                        we would like to switch all components to use ComponentConfig
                        + ConfigMaps.'
                      type: object
                    extraVolumes:
                      description: ExtraVolumes is an extra set of host volumes, mounted
                        to the control plane component.
                      items:
                        properties:
                          hostPath:
                            description: HostPath is the path in the host that will
                              be mounted inside the pod.
                            type: string
                          mountPath:
                            description: MountPath is the path inside the pod where
                              hostPath will be mounted.
                            type: string
                          name:
                            description: Name of the volume inside the pod template.
                            type: string
                          pathType:
                            description: PathType is the type of the HostPath.
                            type: string
                          readOnly:
                            description: ReadOnly controls write access to the volume
                            type: boolean
                        required:
                        - name
                        - hostPath
                        - mountPath
                        type: object
                      type: array
                  type: object
                dns:
                  description: DNS defines the options for the DNS add-on installed
                    in the cluster.
                  properties:
                    imageRepository:
                      description: ImageRepository sets the container registry to
                        pull images from. if not set, the ImageRepository defined
                        in ClusterConfiguration will be used instead.
                      type: string
                    imageTag:
                      description: ImageTag allows to specify a tag for the image.
                        In case this value is set, kubeadm does not change automatically
                        the version of the above components during upgrades.
                      type: string
                    type:
                      description: Type defines the DNS add-on to be used
                      type: string
                  required:
                  - type
                  type: object
                etcd:
                  description: Etcd holds configuration for etcd.
                  properties:
                    external:
                      description: External describes how to connect to an external
                        etcd cluster Local and External are mutually exclusive
                      properties:
                        caFile:
                          description: CAFile is an SSL Certificate Authority file
                            used to secure etcd communication. Required if using a
                            TLS connection.
                          type: string
                        certFile:
                          description: CertFile is an SSL certification file used
                            to secure etcd communication. Required if using a TLS
                            connection.
                          type: string
                        endpoints:
                          description: Endpoints of etcd members. Required for ExternalEtcd.
                          items:
                            type: string
                          type: array
                        keyFile:
                          description: KeyFile is an SSL key file used to secure etcd
                            communication. Required if using a TLS connection.
                          type: string
                      required:
                      - endpoints
                      - caFile
                      - certFile
                      - keyFile
                      type: object
                    local:
                      description: Local provides configuration knobs for configuring
                        the local etcd instance Local and External are mutually exclusive
                      properties:
                        dataDir:
                          description: DataDir is the directory etcd will place its
                            data. Defaults to "/var/lib/etcd".
                          type: string
                        extraArgs:
                          additionalProperties:
                            type: string
                          description: ExtraArgs are extra arguments provided to the
                            etcd binary when run inside a static pod.
                          type: object
                        imageRepository:
                          description: ImageRepository sets the container registry
                            to pull images from. if not set, the ImageRepository defined
                            in ClusterConfiguration will be used instead.
                          type: string
                        imageTag:
                          description: ImageTag allows to specify a tag for the image.
                            In case this value is set, kubeadm does not change automatically
                            the version of the above components during upgrades.
                          type: string
                        peerCertSANs:
                          description: PeerCertSANs sets extra Subject Alternative
                            Names for the etcd peer signing cert.
                          items:
                            type: string
                          type: array
                        serverCertSANs:
                          description: ServerCertSANs sets extra Subject Alternative
                            Names for the etcd server signing cert.
                          items:
                            type: string
                          type: array
                      required:
                      - dataDir
                      type: object
                  type: object
                featureGates:
                  additionalProperties:
                    type: boolean
                  description: FeatureGates enabled by the user.
                  type: object
                imageRepository:
                  description: ImageRepository sets the container registry to pull
                    images from. If empty, `k8s.gcr.io` will be used by default; in
                    case of kubernetes version is a CI build (kubernetes version starts
                    with `ci/` or `ci-cross/`) `gcr.io/kubernetes-ci-images` will
                    be used as a default for control plane components and for kube-proxy,
                    while `k8s.gcr.io` will be used for all the other images.
                  type: string
                kind:
                  description: 'Kind is a string value representing the REST resource
                    this object represents. Servers may infer this from the endpoint
                    the client submits requests to. Cannot be updated. In CamelCase.
                    More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                kubernetesVersion:
                  description: KubernetesVersion is the target version of the control
                    plane.
                  type: string
                networking:
                  description: Networking holds configuration for the networking topology
                    of the cluster.
                  properties:
                    dnsDomain:
                      description: DNSDomain is the dns domain used by k8s services.
                        Defaults to "cluster.local".
                      type: string
                    podSubnet:
                      description: PodSubnet is the subnet used by pods.
                      type: string
                    serviceSubnet:
                      description: ServiceSubnet is the subnet used by k8s services.
                        Defaults to "10.96.0.0/12".
                      type: string
                  type: object
                scheduler:
                  description: Scheduler contains extra settings for the scheduler
                    control plane component
                  properties:
                    extraArgs:
                      additionalProperties:
                        type: string
                      description: 'ExtraArgs is an extra set of flags to pass to
                        the control plane component. TODO: This is temporary and ideally
                        we would like to switch all components to use ComponentConfig
                        + ConfigMaps.'
                      type: object
                    extraVolumes:
                      description: ExtraVolumes is an extra set of host volumes, mounted
                        to the control plane component.
                      items:
                        properties:
                          hostPath:
                            description: HostPath is the path in the host that will
                              be mounted inside the pod.
                            type: string
                          mountPath:
                            description: MountPath is the path inside the pod where
                              hostPath will be mounted.
                            type: string
                          name:
                            description: Name of the volume inside the pod template.
                            type: string
                          pathType:
                            description: PathType is the type of the HostPath.
                            type: string
                          readOnly:
                            description: ReadOnly controls write access to the volume
                            type: boolean
                        required:
                        - name
                        - hostPath
                        - mountPath
                        type: object
                      type: array
                  type: object
                useHyperKubeImage:
                  description: UseHyperKubeImage controls if hyperkube should be used
                    for Kubernetes components instead of their respective separate
                    images
                  type: boolean
              type: object
            initConfiguration:
              properties:
                apiVersion:
                  description: 'APIVersion defines the versioned schema of this representation
                    of an object. Servers should convert recognized schemas to the
                    latest internal value, and may reject unrecognized values. More
                    info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                  type: string
                bootstrapTokens:
                  description: BootstrapTokens is respected at `kubeadm init` time
                    and describes a set of Bootstrap Tokens to create. This information
                    IS NOT uploaded to the kubeadm cluster configmap, partly because
                    of its sensitive nature
                  items:
                    properties:
                      description:
                        description: Description sets a human-friendly message why
                          this token exists and what it's used for, so other administrators
                          can know its purpose.
                        type: string
                      expires:
                        description: Expires specifies the timestamp when this token
                          expires. Defaults to being set dynamically at runtime based
                          on the TTL. Expires and TTL are mutually exclusive.
                        format: date-time
                        type: string
                      groups:
                        description: Groups specifies the extra groups that this token
                          will authenticate as when/if used for authentication
                        items:
                          type: string
                        type: array
                      token:
                        description: Token is used for establishing bidirectional
                          trust between nodes and control-planes. Used for joining
                          nodes in the cluster.
                        type: object
                      ttl:
                        description: TTL defines the time to live for this token.
                          Defaults to 24h. Expires and TTL are mutually exclusive.
                        type: string
                      usages:
                        description: Usages describes the ways in which this token
                          can be used. Can by default be used for establishing bidirectional
                          trust, but that can be changed here.
                        items:
                          type: string
                        type: array
                    required:
                    - token
                    type: object
                  type: array
                certificateKey:
                  description: CertificateKey sets the key with which certificates
                    and keys are encrypted prior to being uploaded in a secret in
                    the cluster during the uploadcerts init phase.
                  type: string
                kind:
                  description: 'Kind is a string value representing the REST resource
                    this object represents. Servers may infer this from the endpoint
                    the client submits requests to. Cannot be updated. In CamelCase.
                    More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                localAPIEndpoint:
                  description: LocalAPIEndpoint represents the endpoint of the API
                    server instance that's deployed on this control plane node In
                    HA setups, this differs from ClusterConfiguration.ControlPlaneEndpoint
                    in the sense that ControlPlaneEndpoint is the global endpoint
                    for the cluster, which then loadbalances the requests to each
                    individual API server. This configuration object lets you customize
                    what IP/DNS name and port the local API server advertises it's
                    accessible on. By default, kubeadm tries to auto-detect the IP
                    of the default interface and use that, but in case that process
                    fails you may set the desired value here.
                  properties:
                    advertiseAddress:
                      description: AdvertiseAddress sets the IP address for the API
                        server to advertise.
                      type: string
                    bindPort:
                      description: BindPort sets the secure port for the API Server
                        to bind to. Defaults to 6443.
                      format: int32
                      type: integer
                  type: object
                nodeRegistration:
                  description: NodeRegistration holds fields that relate to registering
                    the new control-plane node to the cluster
                  properties:
                    criSocket:
                      description: CRISocket is used to retrieve container runtime
                        info. This information will be annotated to the Node API object,
                        for later re-use
                      type: string
                    ignorePreflightErrors:
                      description: IgnorePreflightErrors provides a slice of pre-flight
                        errors to be ignored when the current node is registered.
                      items:
                        type: string
                      type: array
                    kubeletExtraArgs:
                      additionalProperties:
                        type: string
                      description: KubeletExtraArgs passes through extra arguments
                        to the kubelet. The arguments here are passed to the kubelet
                        command line via the environment file kubeadm writes at runtime
                        for the kubelet to source. This overrides the generic base-level
                        configuration in the kubelet-config-1.X ConfigMap Flags have
                        higher priority when parsing. These values are local and specific
                        to the node kubeadm is executing on.
                      type: object
                    name:
                      description: Name is the `.Metadata.Name` field of the Node
                        API object that will be created in this `kubeadm init` or
                        `kubeadm join` operation. This field is also used in the CommonName
                        field of the kubelet's client certificate to the API server.
                        Defaults to the hostname of the node if not provided.
                      type: string
                    taints:
                      description: 'Taints specifies the taints the Node API object
                        should be registered with. If this field is unset, i.e. nil,
                        in the `kubeadm init` process it will be defaulted to []v1.Taint{''node-role.kubernetes.io/master=""''}.
                        If you don''t want to taint your control-plane node, set this
                        field to an empty slice, i.e. `taints: {}` in the YAML file.
                        This field is solely used for Node registration.'
                      items:
                        properties:
                          effect:
                            description: Required. The effect of the taint on pods
                              that do not tolerate the taint. Valid effects are NoSchedule,
                              PreferNoSchedule and NoExecute.
                            type: string
                          key:
                            description: Required. The taint key to be applied to
                              a node.
                            type: string
                          timeAdded:
                            description: TimeAdded represents the time at which the
                              taint was added. It is only written for NoExecute taints.
                            format: date-time
                            type: string
                          value:
                            description: Required. The taint value corresponding to
                              the taint key.
                            type: string
                        required:
                        - key
                        - effect
                        type: object
                      type: array
                  required:
                  - taints
                  type: object
              type: object
            joinConfiguration:
              properties:
                apiVersion:
                  description: 'APIVersion defines the versioned schema of this representation
                    of an object. Servers should convert recognized schemas to the
                    latest internal value, and may reject unrecognized values. More
                    info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                  type: string
                caCertPath:
                  description: CACertPath is the path to the SSL certificate authority
                    used to secure comunications between node and control-plane. Defaults
                    to "/etc/kubernetes/pki/ca.crt".
                  type: string
                controlPlane:
                  description: ControlPlane defines the additional control plane instance
                    to be deployed on the joining node. If nil, no additional control
                    plane instance will be deployed.
                  properties:
                    certificateKey:
                      description: CertificateKey is the key that is used for decryption
                        of certificates after they are downloaded from the secret
                        upon joining a new control plane node. The corresponding encryption
                        key is in the InitConfiguration.
                      type: string
                    localAPIEndpoint:
                      description: LocalAPIEndpoint represents the endpoint of the
                        API server instance to be deployed on this node.
                      properties:
                        advertiseAddress:
                          description: AdvertiseAddress sets the IP address for the
                            API server to advertise.
                          type: string
                        bindPort:
                          description: BindPort sets the secure port for the API Server
                            to bind to. Defaults to 6443.
                          format: int32
                          type: integer
                      type: object
                  type: object
                discovery:
                  description: Discovery specifies the options for the kubelet to
                    use during the TLS Bootstrap process
                  properties:
                    bootstrapToken:
                      description: BootstrapToken is used to set the options for bootstrap
                        token based discovery BootstrapToken and File are mutually
                        exclusive
                      properties:
                        apiServerEndpoint:
                          description: APIServerEndpoint is an IP or domain name to
                            the API server from which info will be fetched.
                          type: string
                        caCertHashes:
                          description: 'CACertHashes specifies a set of public key
                            pins to verify when token-based discovery is used. The
                            root CA found during discovery must match one of these
                            values. Specifying an empty set disables root CA pinning,
                            which can be unsafe. Each hash is specified as "<type>:<value>",
                            where the only currently supported type is "sha256". This
                            is a hex-encoded SHA-256 hash of the Subject Public Key
                            Info (SPKI) object in DER-encoded ASN.1. These hashes
                            can be calculated using, for example, OpenSSL: openssl
                            x509 -pubkey -in ca.crt openssl rsa -pubin -outform der
                            2>&/dev/null | openssl dgst -sha256 -hex'
                          items:
                            type: string
                          type: array
                        token:
                          description: Token is a token used to validate cluster information
                            fetched from the control-plane.
                          type: string
                        unsafeSkipCAVerification:
                          description: UnsafeSkipCAVerification allows token-based
                            discovery without CA verification via CACertHashes. This
                            can weaken the security of kubeadm since other nodes can
                            impersonate the control-plane.
                          type: boolean
                      required:
                      - token
                      type: object
                    file:
                      description: File is used to specify a file or URL to a kubeconfig
                        file from which to load cluster information BootstrapToken
                        and File are mutually exclusive
                      properties:
                        kubeConfigPath:
                          description: KubeConfigPath is used to specify the actual
                            file path or URL to the kubeconfig file from which to
                            load cluster information
                          type: string
                      required:
                      - kubeConfigPath
                      type: object
                    timeout:
                      description: Timeout modifies the discovery timeout
                      type: string
                    tlsBootstrapToken:
                      description: TLSBootstrapToken is a token used for TLS bootstrapping.
                        If .BootstrapToken is set, this field is defaulted to .BootstrapToken.Token,
                        but can be overridden. If .File is set, this field **must
                        be set** in case the KubeConfigFile does not contain any other
                        authentication information
                      type: string
                  type: object
                kind:
                  description: 'Kind is a string value representing the REST resource
                    this object represents. Servers may infer this from the endpoint
                    the client submits requests to. Cannot be updated. In CamelCase.
                    More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                nodeRegistration:
                  description: NodeRegistration holds fields that relate to registering
                    the new control-plane node to the cluster
                  properties:
                    criSocket:
                      description: CRISocket is used to retrieve container runtime
                        info. This information will be annotated to the Node API object,
                        for later re-use
                      type: string
                    ignorePreflightErrors:
                      description: IgnorePreflightErrors provides a slice of pre-flight
                        errors to be ignored when the current node is registered.
                      items:
                        type: string
                      type: array
                    kubeletExtraArgs:
                      additionalProperties:
                        type: string
                      description: KubeletExtraArgs passes through extra arguments
                        to the kubelet. The arguments here are passed to the kubelet
                        command line via the environment file kubeadm writes at runtime
                        for the kubelet to source. This overrides the generic base-level
                        configuration in the kubelet-config-1.X ConfigMap Flags have
                        higher priority when parsing. These values are local and specific
                        to the node kubeadm is executing on.
                      type: object
                    name:
                      description: Name is the `.Metadata.Name` field of the Node
                        API object that will be created in this `kubeadm init` or
                        `kubeadm join` operation. This field is also used in the CommonName
                        field of the kubelet's client certificate to the API server.
                        Defaults to the hostname of the node if not provided.
                      type: string
                    taints:
                      description: 'Taints specifies the taints the Node API object
                        should be registered with. If this field is unset, i.e. nil,
                        in the `kubeadm init` process it will be defaulted to []v1.Taint{''node-role.kubernetes.io/master=""''}.
                        If you don''t want to taint your control-plane node, set this
                        field to an empty slice, i.e. `taints: {}` in the YAML file.
                        This field is solely used for Node registration.'
                      items:
                        properties:
                          effect:
                            description: Required. The effect of the taint on pods
                              that do not tolerate the taint. Valid effects are NoSchedule,
                              PreferNoSchedule and NoExecute.
                            type: string
                          key:
                            description: Required. The taint key to be applied to
                              a node.
                            type: string
                          timeAdded:
                            description: TimeAdded represents the time at which the
                              taint was added. It is only written for NoExecute taints.
                            format: date-time
                            type: string
                          value:
                            description: Required. The taint value corresponding to
                              the taint key.
                            type: string
                        required:
                        - key
                        - effect
                        type: object
                      type: array
                  required:
                  - taints
                  type: object
              required:
              - discovery
              type: object
          required:
          - clusterConfiguration
          type: object
        status:
          properties:
            bootstrapData:
              description: BootstrapData will be a cloud-init script for now
              format: byte
              type: string
            phase:
              description: Phase is the state of the KubeadmBootstrapConfig object
              enum:
              - Ready
              - Unknown
              type: string
          required:
          - phase
          type: object
      type: object
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
